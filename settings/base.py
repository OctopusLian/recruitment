"""
Django settings for recruitment project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--#&&td%ncw2myba=073@=$+xas#u7m4!n2fz9_2s5n4yz2ahqr'

# SECURITY WARNING: don't run with debug turned on in production!
# 生产环境设置为 False
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_python3_ldap',
    'jobs',
    'interview'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'recruitment.urls'

# 模板引擎
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'recruitment.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    # 默认使用的数据库
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# 默认英文
# 英文是 en-us
# 中文是 zh-hans
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# TODO: LDAP配置

# 日志
LOGGING = {
    'version': 1,   # 日志记录格式的版本号
    'disable_existing_loggers': False, # 是否禁用现在已有的其他logger
    'formatters': {
      'simple': {
            'formar': '%(asctime)s %(name)-12s %(lineno)d %(levelname)-8s %(message)s'
      },
    },

    # 'handlers': { # 定义一系列的处理链
    #     "console": {
    #         "class": "logging.StreamHandler",
    #         'formatters': 'simple',
    #     },
    #     'mail_admins': {
    #         'level': 'ERROR',
    #         'class': 'django.utils.log.AdminEmailHandler',
    #     },
    #     'file': {
    #         'class': 'logging.FileHandler',
    #         'formatters': 'simple',
    #         'filename': os.path.join(os.path.dirname(BASE_DIR),'recruitment.admin.log'),
    #     },
    # },
    #
    # 'root': {
    #     'handlers': ['console', 'file'],
    #     'level': 'INFO',
    # },
    #
    # "loggers": { # 定义日志记录器
    #     "django_python3_ldap": {
    #         "handlers": ["console",'file'],
    #         "level": "DEBUG", # DEBUG级别以上的日志都会记录下来
    #     },
    # },
}